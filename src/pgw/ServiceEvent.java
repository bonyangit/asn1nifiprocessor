/*
 * This class file was automatically generated by ASN1bean v1.12.0 (http://www.beanit.com)
 */

package pgw;

import java.io.IOException;
import java.io.EOFException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.ArrayList;
import java.util.Iterator;
import java.io.UnsupportedEncodingException;
import java.math.BigInteger;
import java.io.Serializable;
import com.beanit.asn1bean.ber.*;
import com.beanit.asn1bean.ber.types.*;
import com.beanit.asn1bean.ber.types.string.*;


public class ServiceEvent implements BerType, Serializable {

	private static final long serialVersionUID = 1L;

	public static final BerTag tag = new BerTag(BerTag.UNIVERSAL_CLASS, BerTag.CONSTRUCTED, 16);

	private byte[] code = null;
	private BerInteger serviceCode = null;
	private BerInteger uplinkVolume = null;
	private BerInteger downlinkVolume = null;
	private BerInteger usageduration = null;
	private BerIA5String url = null;
	private BerIA5String chargingRuleBaseName = null;
	private BerInteger ratingGroup = null;
	private BerInteger serviceIdentifier = null;
	private BerInteger localSequenceNumber = null;
	private BerOctetString envelopeStartTime = null;
	private BerOctetString envelopeEndTime = null;
	private BerOctetString duration = null;
	private BerInteger changeTimeTimeZone = null;
	private BerBoolean noOCSCreditControl = null;
	private BerInteger uplinkPacketNum = null;
	private BerInteger downlinkPacketNum = null;
	
	public ServiceEvent() {
	}

	public ServiceEvent(byte[] code) {
		this.code = code;
	}

	public void setServiceCode(BerInteger serviceCode) {
		this.serviceCode = serviceCode;
	}

	public BerInteger getServiceCode() {
		return serviceCode;
	}

	public void setUplinkVolume(BerInteger uplinkVolume) {
		this.uplinkVolume = uplinkVolume;
	}

	public BerInteger getUplinkVolume() {
		return uplinkVolume;
	}

	public void setDownlinkVolume(BerInteger downlinkVolume) {
		this.downlinkVolume = downlinkVolume;
	}

	public BerInteger getDownlinkVolume() {
		return downlinkVolume;
	}

	public void setUsageduration(BerInteger usageduration) {
		this.usageduration = usageduration;
	}

	public BerInteger getUsageduration() {
		return usageduration;
	}

	public void setUrl(BerIA5String url) {
		this.url = url;
	}

	public BerIA5String getUrl() {
		return url;
	}

	public void setChargingRuleBaseName(BerIA5String chargingRuleBaseName) {
		this.chargingRuleBaseName = chargingRuleBaseName;
	}

	public BerIA5String getChargingRuleBaseName() {
		return chargingRuleBaseName;
	}

	public void setRatingGroup(BerInteger ratingGroup) {
		this.ratingGroup = ratingGroup;
	}

	public BerInteger getRatingGroup() {
		return ratingGroup;
	}

	public void setServiceIdentifier(BerInteger serviceIdentifier) {
		this.serviceIdentifier = serviceIdentifier;
	}

	public BerInteger getServiceIdentifier() {
		return serviceIdentifier;
	}

	public void setLocalSequenceNumber(BerInteger localSequenceNumber) {
		this.localSequenceNumber = localSequenceNumber;
	}

	public BerInteger getLocalSequenceNumber() {
		return localSequenceNumber;
	}

	public void setEnvelopeStartTime(BerOctetString envelopeStartTime) {
		this.envelopeStartTime = envelopeStartTime;
	}

	public BerOctetString getEnvelopeStartTime() {
		return envelopeStartTime;
	}

	public void setEnvelopeEndTime(BerOctetString envelopeEndTime) {
		this.envelopeEndTime = envelopeEndTime;
	}

	public BerOctetString getEnvelopeEndTime() {
		return envelopeEndTime;
	}

	public void setDuration(BerOctetString duration) {
		this.duration = duration;
	}

	public BerOctetString getDuration() {
		return duration;
	}

	public void setChangeTimeTimeZone(BerInteger changeTimeTimeZone) {
		this.changeTimeTimeZone = changeTimeTimeZone;
	}

	public BerInteger getChangeTimeTimeZone() {
		return changeTimeTimeZone;
	}

	public void setNoOCSCreditControl(BerBoolean noOCSCreditControl) {
		this.noOCSCreditControl = noOCSCreditControl;
	}

	public BerBoolean getNoOCSCreditControl() {
		return noOCSCreditControl;
	}

	public void setUplinkPacketNum(BerInteger uplinkPacketNum) {
		this.uplinkPacketNum = uplinkPacketNum;
	}

	public BerInteger getUplinkPacketNum() {
		return uplinkPacketNum;
	}

	public void setDownlinkPacketNum(BerInteger downlinkPacketNum) {
		this.downlinkPacketNum = downlinkPacketNum;
	}

	public BerInteger getDownlinkPacketNum() {
		return downlinkPacketNum;
	}

	@Override public int encode(OutputStream reverseOS) throws IOException {
		return encode(reverseOS, true);
	}

	public int encode(OutputStream reverseOS, boolean withTag) throws IOException {

		if (code != null) {
			reverseOS.write(code);
			if (withTag) {
				return tag.encode(reverseOS) + code.length;
			}
			return code.length;
		}

		int codeLength = 0;
		if (downlinkPacketNum != null) {
			codeLength += downlinkPacketNum.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 18
			reverseOS.write(0x92);
			codeLength += 1;
		}
		
		if (uplinkPacketNum != null) {
			codeLength += uplinkPacketNum.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 17
			reverseOS.write(0x91);
			codeLength += 1;
		}
		
		if (noOCSCreditControl != null) {
			codeLength += noOCSCreditControl.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 16
			reverseOS.write(0x90);
			codeLength += 1;
		}
		
		if (changeTimeTimeZone != null) {
			codeLength += changeTimeTimeZone.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 15
			reverseOS.write(0x8F);
			codeLength += 1;
		}
		
		if (duration != null) {
			codeLength += duration.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 14
			reverseOS.write(0x8E);
			codeLength += 1;
		}
		
		if (envelopeEndTime != null) {
			codeLength += envelopeEndTime.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 13
			reverseOS.write(0x8D);
			codeLength += 1;
		}
		
		if (envelopeStartTime != null) {
			codeLength += envelopeStartTime.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 12
			reverseOS.write(0x8C);
			codeLength += 1;
		}
		
		if (localSequenceNumber != null) {
			codeLength += localSequenceNumber.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 11
			reverseOS.write(0x8B);
			codeLength += 1;
		}
		
		if (serviceIdentifier != null) {
			codeLength += serviceIdentifier.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 10
			reverseOS.write(0x8A);
			codeLength += 1;
		}
		
		if (ratingGroup != null) {
			codeLength += ratingGroup.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 9
			reverseOS.write(0x89);
			codeLength += 1;
		}
		
		if (chargingRuleBaseName != null) {
			codeLength += chargingRuleBaseName.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 8
			reverseOS.write(0x88);
			codeLength += 1;
		}
		
		if (url != null) {
			codeLength += url.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 5
			reverseOS.write(0x85);
			codeLength += 1;
		}
		
		if (usageduration != null) {
			codeLength += usageduration.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 3
			reverseOS.write(0x83);
			codeLength += 1;
		}
		
		if (downlinkVolume != null) {
			codeLength += downlinkVolume.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 2
			reverseOS.write(0x82);
			codeLength += 1;
		}
		
		if (uplinkVolume != null) {
			codeLength += uplinkVolume.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 1
			reverseOS.write(0x81);
			codeLength += 1;
		}
		
		if (serviceCode != null) {
			codeLength += serviceCode.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 0
			reverseOS.write(0x80);
			codeLength += 1;
		}
		
		codeLength += BerLength.encodeLength(reverseOS, codeLength);

		if (withTag) {
			codeLength += tag.encode(reverseOS);
		}

		return codeLength;

	}

	@Override public int decode(InputStream is) throws IOException {
		return decode(is, true);
	}

	public int decode(InputStream is, boolean withTag) throws IOException {
		int tlByteCount = 0;
		int vByteCount = 0;
		BerTag berTag = new BerTag();

		if (withTag) {
			tlByteCount += tag.decodeAndCheck(is);
		}

		BerLength length = new BerLength();
		tlByteCount += length.decode(is);
		int lengthVal = length.val;
		if (lengthVal == 0) {
			return tlByteCount;
		}
		vByteCount += berTag.decode(is);

		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 0)) {
			serviceCode = new BerInteger();
			vByteCount += serviceCode.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 1)) {
			uplinkVolume = new BerInteger();
			vByteCount += uplinkVolume.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 2)) {
			downlinkVolume = new BerInteger();
			vByteCount += downlinkVolume.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 3)) {
			usageduration = new BerInteger();
			vByteCount += usageduration.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 5)) {
			url = new BerIA5String();
			vByteCount += url.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 8)) {
			chargingRuleBaseName = new BerIA5String();
			vByteCount += chargingRuleBaseName.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 9)) {
			ratingGroup = new BerInteger();
			vByteCount += ratingGroup.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 10)) {
			serviceIdentifier = new BerInteger();
			vByteCount += serviceIdentifier.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 11)) {
			localSequenceNumber = new BerInteger();
			vByteCount += localSequenceNumber.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 12)) {
			envelopeStartTime = new BerOctetString();
			vByteCount += envelopeStartTime.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 13)) {
			envelopeEndTime = new BerOctetString();
			vByteCount += envelopeEndTime.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 14)) {
			duration = new BerOctetString();
			vByteCount += duration.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 15)) {
			changeTimeTimeZone = new BerInteger();
			vByteCount += changeTimeTimeZone.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 16)) {
			noOCSCreditControl = new BerBoolean();
			vByteCount += noOCSCreditControl.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 17)) {
			uplinkPacketNum = new BerInteger();
			vByteCount += uplinkPacketNum.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 18)) {
			downlinkPacketNum = new BerInteger();
			vByteCount += downlinkPacketNum.decode(is, false);
			if (lengthVal >= 0 && vByteCount == lengthVal) {
				return tlByteCount + vByteCount;
			}
			vByteCount += berTag.decode(is);
		}
		
		if (lengthVal < 0) {
			if (!berTag.equals(0, 0, 0)) {
				throw new IOException("Decoded sequence has wrong end of contents octets");
			}
			vByteCount += BerLength.readEocByte(is);
			return tlByteCount + vByteCount;
		}

		throw new IOException("Unexpected end of sequence, length tag: " + lengthVal + ", bytes decoded: " + vByteCount);

	}

	public void encodeAndSave(int encodingSizeGuess) throws IOException {
		ReverseByteArrayOutputStream reverseOS = new ReverseByteArrayOutputStream(encodingSizeGuess);
		encode(reverseOS, false);
		code = reverseOS.getArray();
	}

	@Override public String toString() {
		StringBuilder sb = new StringBuilder();
		appendAsString(sb, 0);
		return sb.toString();
	}

	public void appendAsString(StringBuilder sb, int indentLevel) {

		sb.append("{");
		boolean firstSelectedElement = true;
		if (serviceCode != null) {
			sb.append("\n");
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("serviceCode: ").append(serviceCode);
			firstSelectedElement = false;
		}
		
		if (uplinkVolume != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("uplinkVolume: ").append(uplinkVolume);
			firstSelectedElement = false;
		}
		
		if (downlinkVolume != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("downlinkVolume: ").append(downlinkVolume);
			firstSelectedElement = false;
		}
		
		if (usageduration != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("usageduration: ").append(usageduration);
			firstSelectedElement = false;
		}
		
		if (url != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("url: ").append(url);
			firstSelectedElement = false;
		}
		
		if (chargingRuleBaseName != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("chargingRuleBaseName: ").append(chargingRuleBaseName);
			firstSelectedElement = false;
		}
		
		if (ratingGroup != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("ratingGroup: ").append(ratingGroup);
			firstSelectedElement = false;
		}
		
		if (serviceIdentifier != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("serviceIdentifier: ").append(serviceIdentifier);
			firstSelectedElement = false;
		}
		
		if (localSequenceNumber != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("localSequenceNumber: ").append(localSequenceNumber);
			firstSelectedElement = false;
		}
		
		if (envelopeStartTime != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("envelopeStartTime: ").append(envelopeStartTime);
			firstSelectedElement = false;
		}
		
		if (envelopeEndTime != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("envelopeEndTime: ").append(envelopeEndTime);
			firstSelectedElement = false;
		}
		
		if (duration != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("duration: ").append(duration);
			firstSelectedElement = false;
		}
		
		if (changeTimeTimeZone != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("changeTimeTimeZone: ").append(changeTimeTimeZone);
			firstSelectedElement = false;
		}
		
		if (noOCSCreditControl != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("noOCSCreditControl: ").append(noOCSCreditControl);
			firstSelectedElement = false;
		}
		
		if (uplinkPacketNum != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("uplinkPacketNum: ").append(uplinkPacketNum);
			firstSelectedElement = false;
		}
		
		if (downlinkPacketNum != null) {
			if (!firstSelectedElement) {
				sb.append(",\n");
			}
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("downlinkPacketNum: ").append(downlinkPacketNum);
			firstSelectedElement = false;
		}
		
		sb.append("\n");
		for (int i = 0; i < indentLevel; i++) {
			sb.append("\t");
		}
		sb.append("}");
	}

}

